"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class mbot_image_t(object):
    __slots__ = ["utime", "encode_img"]

    __typenames__ = ["int64_t", "int16_t"]

    __dimensions__ = [None, [144, 192, 3]]

    def __init__(self):
        self.utime = 0
        self.encode_img = [ [ [ 0 for dim2 in range(3) ] for dim1 in range(192) ] for dim0 in range(144) ]

    def encode(self):
        buf = BytesIO()
        buf.write(mbot_image_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">q", self.utime))
        for i0 in range(144):
            for i1 in range(192):
                buf.write(struct.pack('>3h', *self.encode_img[i0][i1][:3]))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != mbot_image_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return mbot_image_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = mbot_image_t()
        self.utime = struct.unpack(">q", buf.read(8))[0]
        self.encode_img = []
        for i0 in range(144):
            self.encode_img.append([])
            for i1 in range(192):
                self.encode_img[i0].append(struct.unpack('>3h', buf.read(6)))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if mbot_image_t in parents: return 0
        tmphash = (0xcbef0383e4f057f0) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if mbot_image_t._packed_fingerprint is None:
            mbot_image_t._packed_fingerprint = struct.pack(">Q", mbot_image_t._get_hash_recursive([]))
        return mbot_image_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

